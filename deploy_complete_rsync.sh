#!/bin/bash

# Script de d√©ploiement complet avec installation rsync
# √Ä ex√©cuter sur le serveur 91.108.112.77

set -e

echo "üöÄ D√©ploiement complet avec installation rsync"
echo "============================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier si on est root
if [[ $EUID -ne 0 ]]; then
   print_error "Ce script doit √™tre ex√©cut√© en tant que root"
   exit 1
fi

# 1. Arr√™ter les services Django
print_status "Arr√™t des services Django..."
if systemctl is-active --quiet gunicorn; then
    systemctl stop gunicorn
    print_status "‚úÖ Gunicorn arr√™t√©"
fi

# 2. Sauvegarder les changements locaux
print_status "Sauvegarde des changements locaux..."
cd /var/www/livemanager
if [ -n "$(git status --porcelain)" ]; then
    git stash
    print_status "‚úÖ Changements locaux sauvegard√©s"
fi

# 3. Mettre √† jour le code depuis GitHub
print_status "Mise √† jour du code depuis GitHub..."
git pull origin main
print_status "‚úÖ Code mis √† jour"

# 4. Installation de rsync
print_status "Installation de rsync..."
apt-get update
apt-get install -y rsync

# V√©rifier l'installation
if command -v rsync &> /dev/null; then
    rsync_version=$(rsync --version | head -n1)
    print_status "‚úÖ rsync install√©: $rsync_version"
else
    print_error "‚ùå rsync n'a pas pu √™tre install√©"
    exit 1
fi

# 5. Cr√©er le r√©pertoire de destination rsync
print_status "Cr√©ation du r√©pertoire de destination rsync..."
RSYNC_PATH="/var/www/livemanager/media/videos"
mkdir -p "$RSYNC_PATH"
chown -R www-data:www-data "$RSYNC_PATH"
chmod -R 755 "$RSYNC_PATH"
print_status "‚úÖ R√©pertoire cr√©√©: $RSYNC_PATH"

# 6. Appliquer les migrations Django
print_status "Application des migrations Django..."
python manage.py migrate
print_status "‚úÖ Migrations appliqu√©es"

# 7. Collecter les fichiers statiques
print_status "Collecte des fichiers statiques..."
python manage.py collectstatic --noinput
print_status "‚úÖ Fichiers statiques collect√©s"

# 8. Configuration des permissions
print_status "Configuration des permissions..."
chown -R www-data:www-data /var/www/livemanager
chmod -R 755 /var/www/livemanager

# 9. Test de la configuration rsync
print_status "Test de la configuration rsync..."
echo "Test rsync - LiveManager" > /tmp/test_rsync.txt

if rsync -avz /tmp/test_rsync.txt "$RSYNC_PATH/"; then
    print_status "‚úÖ Test rsync local r√©ussi"
    rm -f /tmp/test_rsync.txt
    rm -f "$RSYNC_PATH/test_rsync.txt"
else
    print_error "‚ùå Test rsync local √©chou√©"
    exit 1
fi

# 10. Test de l'application Django
print_status "Test de l'application Django..."
python manage.py check
print_status "‚úÖ Application Django OK"

# 11. Test du script rsync
print_status "Test du script rsync..."
if [ -f "test_rsync_server.py" ]; then
    python test_rsync_server.py
    print_status "‚úÖ Script rsync test√©"
else
    print_warning "Script test_rsync_server.py non trouv√©"
fi

# 12. Red√©marrer les services
print_status "Red√©marrage des services..."
systemctl start gunicorn
print_status "‚úÖ Gunicorn red√©marr√©"

if systemctl is-active --quiet nginx; then
    systemctl restart nginx
    print_status "‚úÖ Nginx red√©marr√©"
fi

# 13. V√©rifier que les services fonctionnent
print_status "V√©rification des services..."
sleep 3

if systemctl is-active --quiet gunicorn; then
    print_status "‚úÖ Gunicorn fonctionne"
else
    print_error "‚ùå Gunicorn ne fonctionne pas"
    systemctl status gunicorn
    exit 1
fi

# 14. Test de l'application web
print_status "Test de l'application web..."
if curl -f http://localhost:8000/ > /dev/null 2>&1; then
    print_status "‚úÖ Application web accessible"
else
    print_warning "‚ö†Ô∏è Application web non accessible sur localhost:8000"
fi

echo ""
echo "‚úÖ D√©ploiement complet termin√© avec succ√®s !"
echo ""
echo "üìã Configuration finale:"
echo "   - Code mis √† jour depuis GitHub"
echo "   - rsync install√© et fonctionnel"
echo "   - Migrations appliqu√©es"
echo "   - Fichiers statiques collect√©s"
echo "   - R√©pertoire de destination: $RSYNC_PATH"
echo "   - Permissions configur√©es"
echo "   - Services red√©marr√©s"
echo ""
echo "üîß Pour tester l'upload:"
echo "   - Allez sur votre site web"
echo "   - Cr√©ez un nouveau live"
echo "   - Uploadez un fichier vid√©o"
echo ""
echo "üìù Variables d'environnement configur√©es:"
echo "   RSYNC_USER=root"
echo "   RSYNC_HOST=localhost"
echo "   RSYNC_PATH=$RSYNC_PATH"
echo ""
echo "üîç Pour v√©rifier les logs:"
echo "   journalctl -u gunicorn -f"
echo "   tail -f /var/log/nginx/error.log" 